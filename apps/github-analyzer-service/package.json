{
  "name": "@0unveiled/github-analyzer-service",
  "version": "0.1.0",
  "private": true,
  "description": "FastAPI GitHub repository analyzer service",
  "scripts": {
    "dev": "node -e \"const{spawn}=require('child_process');const isWin=process.platform==='win32';const shell=isWin?'cmd':'bash';const flag=isWin?'/c':'-c';const python=isWin?'python':'python3';const activate=isWin?'venv\\\\Scripts\\\\activate &&':'source venv/bin/activate &&';const cmd=activate + python + ' -m uvicorn src.main:app --host 0.0.0.0 --port 8080 --reload';spawn(shell,[flag,cmd],{stdio:'inherit'});\"",
    "dev:unix": "source venv/bin/activate && python3 -m uvicorn src.main:app --host 0.0.0.0 --port 8080 --reload",
    "dev:win": "venv\\Scripts\\activate && python -m uvicorn src.main:app --host 0.0.0.0 --port 8080 --reload",
    "start": "node -e \"const{spawn}=require('child_process');const isWin=process.platform==='win32';const shell=isWin?'cmd':'bash';const flag=isWin?'/c':'-c';const python=isWin?'python':'python3';const activate=isWin?'venv\\\\Scripts\\\\activate &&':'source venv/bin/activate &&';const cmd=activate + python + ' -m uvicorn src.main:app --host 0.0.0.0 --port 8080';spawn(shell,[flag,cmd],{stdio:'inherit'});\"",
    "start:unix": "source venv/bin/activate && python3 -m uvicorn src.main:app --host 0.0.0.0 --port 8080",
    "start:win": "venv\\Scripts\\activate && python -m uvicorn src.main:app --host 0.0.0.0 --port 8080",
    "install": "node setup.js",
    "install:unix": "python3 -m venv venv --system-site-packages && source venv/bin/activate && pip install --no-build-isolation fastapi uvicorn pydantic pydantic-settings httpx requests loguru python-dotenv google-generativeai python-multipart",
    "install:win": "python -m venv venv --system-site-packages && venv\\Scripts\\activate && pip install --no-build-isolation fastapi uvicorn pydantic pydantic-settings httpx requests loguru python-dotenv google-generativeai python-multipart",
    "install:tools": "node -e \"const{execSync}=require('child_process');const isWin=process.platform==='win32';try{const activate=isWin?'venv\\\\Scripts\\\\activate &&':'source venv/bin/activate &&';execSync(activate + ' pip install --no-build-isolation astunparse radon lizard gitpython pygments chardet',{stdio:'inherit',shell:true});}catch(e){console.log('Some analysis tools skipped due to compatibility issues');}\"",
    "install:tools:unix": "source venv/bin/activate && pip install --no-build-isolation astunparse radon lizard gitpython pygments chardet || echo 'Some analysis tools skipped due to compatibility issues'",
    "install:tools:win": "venv\\Scripts\\activate && pip install --no-build-isolation astunparse radon lizard gitpython pygments chardet || echo Some analysis tools skipped due to compatibility issues",
    "setup": "node setup.js",
    "clean": "node -e \"const fs=require('fs');const path=require('path');function rmdir(dir){try{if(fs.existsSync(dir)){fs.rmSync(dir,{recursive:true,force:true});console.log('Cleaned:',dir);}}catch(e){console.log('Skipped:',dir);}};['venv','__pycache__','src/__pycache__'].forEach(rmdir);\"",
    "clean:unix": "rm -rf venv __pycache__ src/__pycache__ src/*/__pycache__",
    "clean:win": "rmdir /s /q venv 2>nul & del /s /q __pycache__ 2>nul & del /s /q src\\__pycache__ 2>nul & for /d /r src %d in (__pycache__) do @if exist \"%d\" rmdir /s /q \"%d\" 2>nul",
    "health": "node -e \"require('http').get('http://localhost:8080/health', res => { let data=''; res.on('data', chunk => data += chunk); res.on('end', () => console.log(data || 'OK')); }).on('error', () => console.log('Service not running'))\"",
    "health:unix": "curl -s http://localhost:8080/health || echo 'Service not running'",
    "health:win": "powershell -Command \"try { (Invoke-WebRequest -Uri 'http://localhost:8080/health' -UseBasicParsing).Content } catch { 'Service not running' }\""
  },
  "keywords": ["fastapi", "python", "github", "analyzer", "ai"],
  "engines": {
    "python": ">=3.8",
    "node": ">=16.0.0"
  }
}
